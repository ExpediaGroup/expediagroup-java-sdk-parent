name: Release

on:
  workflow_dispatch:
    inputs:
      production_release:
        description: '(!!!) Release to production'
        required: true
        type: boolean
        default: false
      upgrade_version:
        description: 'Upgrade version before release'
        required: true
        type: boolean
        default: true

jobs:
  upgrade:
    uses: ./.github/workflows/upgrade.yaml
    with:
      upgrade_version: ${{ github.event.inputs.upgrade_version }}
    secrets:
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

  release:
    if: always()
    needs: [ upgrade ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          server-id: oss-sonatype
          server-username: SONATYPE_USERNAME
          server-password: SONATYPE_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
          settings-path: ${{ github.workspace }}

      - name: "Release artifacts"
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
        run: |
          if ${{github.event.inputs.production_release}}; then
            echo "Releasing to production"
            mvn deploy --settings $GITHUB_WORKSPACE/settings.xml -B -U -P release -DskipTests=true
          else
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            SNAPSHOT_VERSION="${VERSION%-SNAPSHOT}-SNAPSHOT"
            echo "Releasing as snapshot"
            mvn deploy --settings $GITHUB_WORKSPACE/settings.xml -B -U -P release -DskipTests=true -Drevision=$SNAPSHOT_VERSION
          fi
          echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
